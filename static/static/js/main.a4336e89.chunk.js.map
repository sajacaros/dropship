{"version":3,"sources":["summary/Status.js","summary/Refresh.js","summary/SummaryBoard.js","App.js","index.js"],"names":["Status","project","status","pid","uptime","startF","stopF","updateF","onClick","prototype","PropTypes","string","isRequired","number","func","Refresh","refresh","SummaryBoard","props","getSummary","a","axios","get","projects","data","setState","isLoading","start","post","basicUrl","then","stop","update","state","bind","this","className","sort","p1","p2","localeCompare","map","key","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uVAGA,SAASA,EAAT,GAAyE,IAAxDC,EAAuD,EAAvDA,QAASC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,QAC1D,OACI,6BACI,8BAAON,GACP,8BAAOC,GAEQ,SAAXA,EACA,oCACA,mCACA,mCACA,4BAAQM,QAAS,kBAAIH,EAAOJ,KAA5B,UAEA,oCACA,8BAAOE,GACP,8BAAOC,GAEP,4BAAQI,QAAS,kBAAIF,EAAML,KAA3B,SAGJ,4BAAQO,QAAS,kBAAID,EAAQN,KAA7B,WAKZD,EAAOS,UAAY,CACfR,QAASS,IAAUC,OAAOC,WAC1BV,OAAQQ,IAAUC,OAAOC,WACzBR,OAAQM,IAAUC,OAClBR,IAAKO,IAAUG,OACfR,OAAQK,IAAUI,KAAKF,WACvBN,MAAOI,IAAUI,KAAKF,WACtBL,QAASG,IAAUI,KAAKF,YAIbZ,QCnCf,SAASe,EAAT,GAA6B,IAAXC,EAAU,EAAVA,QACd,OACI,6BACI,4BAAQR,QAAS,kBAAIQ,MAArB,YAKZD,EAAQN,UAAY,CAChBO,QAASN,IAAUI,KAAKF,YAIbG,QC8DAE,E,kDAxEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAaVC,WAdmB,sBAcN,8BAAAC,EAAA,sEAGCC,IAAMC,IAAI,sDAHX,gBAEEC,EAFF,EAELC,KAAOD,SAGX,EAAKE,SAAS,CAACF,WAAUG,WAAW,IAL3B,2CAdM,EA0BnBC,MA1BmB,uCA0BX,WAAO1B,GAAP,SAAAmB,EAAA,sEACEC,IAAMO,KAAK,EAAKC,SAAS5B,EAAQ,UAAU6B,MAAK,kBAAI,EAAKX,gBAD3D,2CA1BW,wDA8BnBY,KA9BmB,uCA8BZ,WAAO9B,GAAP,SAAAmB,EAAA,sEACGC,IAAMO,KAAK,EAAKC,SAAS5B,EAAQ,SAAS6B,MAAK,kBAAI,EAAKX,gBAD3D,2CA9BY,wDAkCnBa,OAlCmB,uCAkCV,WAAO/B,GAAP,SAAAmB,EAAA,sEACCC,IAAMO,KAAK,EAAKC,SAAS5B,EAAQ,WAAW6B,MAAK,kBAAI,EAAKX,gBAD3D,2CAlCU,wDAsCnBU,SAAW,8CApCP,EAAKI,MAAQ,CACTP,WAAW,EACXH,SAAU,IAGd,EAAKJ,WAAa,EAAKA,WAAWe,KAAhB,gBAClB,EAAKP,MAAQ,EAAKA,MAAMO,KAAX,gBACb,EAAKH,KAAO,EAAKA,KAAKG,KAAV,gBACZ,EAAKF,OAAS,EAAKA,OAAOE,KAAZ,gBAVC,E,gEAuBfC,KAAKhB,e,+BAiBC,IAAD,SACyBgB,KAAKF,MAA5BV,EADF,EACEA,SAAUG,EADZ,EACYA,UAEjB,OACI,6BAASU,UAAU,aACf,kBAAC,EAAD,CAASpB,QAASmB,KAAKhB,aAEnBO,EACK,yBAAKU,UAAU,UAAS,0BAAMA,UAAU,eAAhB,iBAExB,yBAAKA,UAAU,YACXb,EAASc,MAAK,SAACC,EAAGC,GAAJ,OAASD,EAAGrC,QAAQuC,cAAcD,EAAGtC,YAAUwC,KAAI,SAACxC,GAAD,OAE1D,kBAAC,EAAD,CACIyC,IAAKzC,EAAQA,QACbA,QAASA,EAAQA,QACjBC,OAAQD,EAAQC,OAChBE,OAAQH,EAAQG,OAChBD,IAAKF,EAAQE,IACbE,OAAQ,EAAKsB,MACbrB,MAAO,EAAKyB,KACZxB,QAAS,EAAKyB,kB,GA9D3BW,aCSZC,MAVf,WACE,OACE,yBAAKR,UAAU,OACb,6BACE,kBAAC,EAAD,SCFRS,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a4336e89.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Status({project, status, pid, uptime, startF, stopF, updateF}) {\r\n    return ( \r\n        <div>\r\n            <span>{project}</span>\r\n            <span>{status}</span>\r\n            {\r\n                status === \"Down\" ? \r\n                <>\r\n                <span>-</span>\r\n                <span>-</span>\r\n                <button onClick={()=>startF(project)}>start</button> \r\n                </> :\r\n                <> \r\n                <span>{pid}</span>\r\n                <span>{uptime}</span>\r\n                \r\n                <button onClick={()=>stopF(project)}>stop</button>\r\n                </>\r\n            }\r\n            <button onClick={()=>updateF(project)}>update</button>\r\n        </div>\r\n        );\r\n}\r\n\r\nStatus.prototype = {\r\n    project: PropTypes.string.isRequired,\r\n    status: PropTypes.string.isRequired,\r\n    uptime: PropTypes.string,\r\n    pid: PropTypes.number,\r\n    startF: PropTypes.func.isRequired,\r\n    stopF: PropTypes.func.isRequired,\r\n    updateF: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Status;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Refresh({refresh}) {\r\n    return ( \r\n        <div>\r\n            <button onClick={()=>refresh()}>refresh</button>\r\n        </div>\r\n        );\r\n}\r\n\r\nRefresh.prototype = {\r\n    refresh: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Refresh;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Status from './Status';\r\nimport Refresh from './Refresh';\r\n\r\nclass SummaryBoard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isLoading: true,\r\n            projects: [],\r\n        }\r\n\r\n        this.getSummary = this.getSummary.bind(this)\r\n        this.start = this.start.bind(this)\r\n        this.stop = this.stop.bind(this)\r\n        this.update = this.update.bind(this)\r\n    }\r\n    \r\n\r\n    getSummary = async () => {\r\n        const {\r\n            data: {projects},\r\n        } = await axios.get('http://192.168.40.147:3001/dropship/api/v1/summary');\r\n        \r\n        this.setState({projects, isLoading: false});\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getSummary();\r\n    }\r\n\r\n    start = async (project) => {\r\n        await axios.post(this.basicUrl+project+\"/start\").then(()=>this.getSummary());\r\n    }\r\n\r\n    stop = async (project) => {\r\n        await axios.post(this.basicUrl+project+\"/stop\").then(()=>this.getSummary());\r\n    }\r\n\r\n    update = async (project) => {\r\n        await axios.post(this.basicUrl+project+\"/update\").then(()=>this.getSummary());\r\n    }\r\n\r\n    basicUrl = 'http://192.168.40.147:3001/dropship/api/v1/';\r\n\r\n    render() {\r\n        const {projects, isLoading} = this.state\r\n\r\n        return (\r\n            <section className=\"container\">\r\n                <Refresh refresh={this.getSummary} />\r\n                {\r\n                    isLoading? \r\n                        (<div className=\"loader\"><span className=\"loader_text\">'Loading...'</span></div>) \r\n                        : \r\n                        (<div className=\"projects\">\r\n                            {projects.sort((p1,p2)=>p1.project.localeCompare(p2.project)).map((project)=> \r\n                                (\r\n                                    <Status \r\n                                        key={project.project} \r\n                                        project={project.project} \r\n                                        status={project.status} \r\n                                        uptime={project.uptime} \r\n                                        pid={project.pid} \r\n                                        startF={this.start}\r\n                                        stopF={this.stop}\r\n                                        updateF={this.update}\r\n                                    />\r\n                                )\r\n                            )}\r\n                        </div>)\r\n                }\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SummaryBoard;","import React from 'react';\nimport './App.css';\nimport SummaryBoard from './summary/SummaryBoard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav>\n        <SummaryBoard />\n      </nav>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}