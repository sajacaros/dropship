{"version":3,"sources":["hoc/withStyles.jsx","theme/Theme.js","component/Button.jsx","hoc/withPending.jsx","modal/Modal.jsx","modal/ModalContext.jsx","component/Text.jsx","modal/ModalProviderWithKey.jsx","modal/createModalProvider.jsx","modal/StartModalContent.jsx","modal/StopModalContent.jsx","modal/UpdateModalContent.jsx","component/Status.js","component/Refresh.js","component/History.jsx","component/StatusTitle.jsx","component/Dependency.js","summary/SummaryBoard.js","loading/LoadingIndicator.jsx","App.js","serviceWorker.js","index.js"],"names":["ThemedStyleSheet","registerTheme","color","primary","secondary","white","gray","default","size","xg","lg","md","sm","xs","lineHeight","unit","registerInterface","aphroditeInterface","withStyles","Button","this","props","children","onPress","disabled","onClick","css","margin","PureComponent","defaultProps","pendingMessage","WrappedComponent","displayName","componentName","name","wrappedComponentName","WithPending","isPending","otherProps","Modal","styles","overlay","wrapper","container","position","zIndex","top","left","width","height","backgroundColor","verticalAlign","padding","React","createContext","Provider","Consumer","Text","large","xlarge","small","xsmall","fontSize","createModalProvider","ContentMap","state","showModal","handleClose","bind","handleOpen","contentId","modalProps","setState","ModalContent","value","openModal","closeModal","id","project","startF","stopF","updateF","ButtonWithPending","withPending","Status","status","pid","uptime","className","ModalProviderWithKey","Refresh","refresh","nowDate","propType","PropTypes","func","isRequired","string","History","results","histories","map","occuredDate","command","result","toLocaleString","join","overflowY","readOnly","StatusTitle","Dependency","dep","SummaryBoard","maxHistory","getDependency","a","axios","get","basicUrl","dependency","data","console","log","getSummary","doPending","projects","Date","doIdle","finally","start","controlEndpoint","stop","update","window","location","protocol","hostname","history","length","concat","slice","trackPromise","post","then","historyArr","pushHistory","catch","error","sort","p1","p2","localeCompare","key","Component","usePromiseTracker","promiseInProgress","style","type","App","LoadingIndicator","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a008f42d.chunk.js","sourcesContent":["import ThemedStyleSheet from 'react-with-styles/lib/ThemedStyleSheet';\r\nimport aphroditeInterface from 'react-with-styles-interface-aphrodite';\r\nimport { css, withStyles, withStylesPropTypes } from 'react-with-styles';\r\nimport Theme from '../theme/Theme';\r\n\r\nThemedStyleSheet.registerTheme(Theme);\r\nThemedStyleSheet.registerInterface(aphroditeInterface);\r\n\r\nexport { css, withStyles, withStylesPropTypes, ThemedStyleSheet };\r\nexport default withStyles;\r\n","export default {\r\n  color: {\r\n    primary: '#03a9f4',\r\n    secondary: '#795548',\r\n    white: '#FFFFFF',\r\n    gray: '#CCCCCC',\r\n    default: '#999999',\r\n  },\r\n\r\n  size: {\r\n    xg: 24,\r\n    lg: 18,\r\n    md: 14,\r\n    sm: 12,\r\n    xs: 10,\r\n  },\r\n\r\n  lineHeight: {\r\n    xg: '60px',\r\n    lg: '54px',\r\n    md: '36px',\r\n    sm: '24px',\r\n    xs: '18px',\r\n  },\r\n  unit: 4,\r\n};\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { css } from '../hoc/withStyles';\r\n\r\nclass Button extends PureComponent {\r\n  render() {\r\n    const { children, onPress, disabled } = this.props;\r\n    return (\r\n      <button disabled={disabled} onClick={onPress} {...css({ margin: '1px' })}>\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  disabled: PropTypes.bool,\r\n  onPress: PropTypes.func,\r\n};\r\n\r\nButton.defaultProps = {\r\n  onPress: () => {},\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nexport default function (pendingMessage = 'Pending') {\r\n  return function withPending(WrappedComponent) {\r\n    const { displayName, name: componentName } = WrappedComponent;\r\n    const wrappedComponentName = displayName || componentName;\r\n\r\n    function WithPending({ isPending, ...otherProps }) {\r\n      if (isPending) return pendingMessage;\r\n      return <WrappedComponent {...otherProps} />;\r\n    }\r\n\r\n    WithPending.displayName = `withLoading(${wrappedComponentName})`;\r\n    return WithPending;\r\n  };\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles, { css } from '../hoc/withStyles';\r\n\r\nclass Modal extends PureComponent {\r\n  render() {\r\n    const { styles, children } = this.props;\r\n    return (\r\n      <div {...css(styles.overlay)}>\r\n        <div {...css(styles.wrapper)}>\r\n          <div {...css(styles.container)}>{children}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default withStyles(({ color, unit }) => ({\r\n  overlay: {\r\n    position: 'fixed',\r\n    zIndex: 9999,\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(0, 0, 0, .5)',\r\n  },\r\n  wrapper: {\r\n    verticalAlign: 'middle',\r\n  },\r\n  container: {\r\n    margin: '40px auto 0px',\r\n    padding: unit * 4,\r\n    backgroundColor: color.white,\r\n    width: 400,\r\n  },\r\n}))(Modal);\r\n","import React from 'react';\r\n\r\nexport const { Provider, Consumer } = React.createContext({});\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles, { css } from '../hoc/withStyles';\r\n\r\nclass Text extends PureComponent {\r\n  render() {\r\n    const { children, styles, large, xlarge, small, xsmall, primary, secondary } = this.props;\r\n    return (\r\n      <span\r\n        {...css(\r\n          styles.default,\r\n          xsmall && styles.xsmall,\r\n          small && styles.small,\r\n          large && styles.large,\r\n          xlarge && styles.xlarge,\r\n          secondary && styles.secondary,\r\n          primary && styles.primary,\r\n        )}\r\n      >\r\n        {children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nText.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  xsmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  xlarge: PropTypes.bool,\r\n  secondary: PropTypes.bool,\r\n  primary: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(({ color, size }) => ({\r\n  default: {\r\n    color: color.default,\r\n    fontSize: size.md,\r\n  },\r\n  xlarge: {\r\n    fontSize: size.xg,\r\n  },\r\n  large: {\r\n    fontSize: size.lg,\r\n  },\r\n  small: {\r\n    fontSize: size.sm,\r\n  },\r\n  xsmall: {\r\n    fontSize: size.xs,\r\n  },\r\n  primary: {\r\n    color: color.primary,\r\n  },\r\n  secondary: {\r\n    color: color.secondary,\r\n  },\r\n}))(Text);\r\n","import createModalProvider from './createModalProvider';\r\nimport StartModalContent from './StartModalContent';\r\nimport StopModalContent from './StopModalContent';\r\nimport UpdateModalContent from './UpdateModalContent';\r\n\r\nexport const START_MODAL = 'start_modal';\r\nexport const STOP_MODAL = 'stop_modal';\r\nexport const UPDATE_MODAL = 'update_modal';\r\n\r\nconst CONTENT_MAP = {\r\n  [START_MODAL]: StartModalContent,\r\n  [STOP_MODAL]: StopModalContent,\r\n  [UPDATE_MODAL]: UpdateModalContent,\r\n};\r\n\r\nexport default createModalProvider(CONTENT_MAP);\r\n","import React, { PureComponent } from 'react';\r\nimport Modal from './Modal';\r\nimport { Provider } from './ModalContext';\r\n\r\nexport default function createModalProvider(ContentMap = {}) {\r\n  return class ModalProvider extends PureComponent {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = { showModal: false };\r\n      this.handleClose = this.handleClose.bind(this);\r\n      this.handleOpen = this.handleOpen.bind(this);\r\n    }\r\n\r\n    handleOpen(contentId, modalProps) {\r\n      this.contentId = contentId;\r\n      this.modalProps = modalProps;\r\n      this.setState({ showModal: true });\r\n    }\r\n\r\n    handleClose() {\r\n      this.setState({ showModal: false });\r\n    }\r\n\r\n    render() {\r\n      const { children } = this.props;\r\n      const { showModal } = this.state;\r\n      const ModalContent = ContentMap[this.contentId];\r\n\r\n      return (\r\n        <Provider\r\n          value={{\r\n            openModal: this.handleOpen,\r\n            closeModal: this.handleClose,\r\n          }}\r\n        >\r\n          {children}\r\n          {showModal && ModalContent && (\r\n            <Modal>\r\n              <ModalContent {...this.modalProps} />\r\n            </Modal>\r\n          )}\r\n        </Provider>\r\n      );\r\n    }\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { Consumer } from './ModalContext';\r\nimport Button from '../component/Button';\r\nimport Text from '../component/Text';\r\n\r\nexport default function StartModalContent({ id, project, startF }) {\r\n  return (\r\n    <Consumer>\r\n      {({ closeModal }) => (\r\n        <div>\r\n          <div>\r\n            <Text>{project}을 정말로 시작 하시겠습니까?</Text>\r\n          </div>\r\n          <Button\r\n            primary\r\n            onPress={() => {\r\n              closeModal();\r\n              startF(project);\r\n            }}\r\n          >\r\n            예\r\n          </Button>\r\n          <Button onPress={closeModal}>닫기</Button>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Consumer } from './ModalContext';\r\nimport Button from '../component/Button';\r\nimport Text from '../component/Text';\r\n\r\nexport default function StopModalContent({ id, project, stopF }) {\r\n  return (\r\n    <Consumer>\r\n      {({ closeModal }) => (\r\n        <div>\r\n          <div>\r\n            <Text>{project}을 정말로 중지 하시겠습니까?</Text>\r\n          </div>\r\n          <Button\r\n            primary\r\n            onPress={() => {\r\n              closeModal();\r\n              stopF(project);\r\n            }}\r\n          >\r\n            예\r\n          </Button>\r\n          <Button onPress={closeModal}>닫기</Button>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Consumer } from './ModalContext';\r\nimport Button from '../component/Button';\r\nimport Text from '../component/Text';\r\n\r\nexport default function UpdateModalContent({ id, project, updateF }) {\r\n  return (\r\n    <Consumer>\r\n      {({ closeModal }) => (\r\n        <div>\r\n          <div>\r\n            <Text>{project}을 정말로 업데이트 하시겠습니까?</Text>\r\n          </div>\r\n          <Button\r\n            primary\r\n            onPress={() => {\r\n              closeModal();\r\n              updateF(project);\r\n            }}\r\n          >\r\n            예\r\n          </Button>\r\n          <Button onPress={closeModal}>닫기</Button>\r\n        </div>\r\n      )}\r\n    </Consumer>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Status.css';\r\nimport Button from './Button';\r\nimport withPending from '../hoc/withPending';\r\nimport ModalProviderWithKey, {\r\n  START_MODAL,\r\n  STOP_MODAL,\r\n  UPDATE_MODAL,\r\n} from '../modal/ModalProviderWithKey';\r\nimport { Consumer as ModalConsumer } from '../modal/ModalContext';\r\n\r\nconst ButtonWithPending = withPending(<Button disabled>pending</Button>)(Button);\r\n\r\nfunction Status({ project, status, pid = '-', uptime = '-', startF, stopF, updateF, isPending }) {\r\n  return (\r\n    <div className=\"status\">\r\n      <span className=\"item\">{project}</span>\r\n      <span className=\"item\">{status}</span>\r\n      <span className=\"item\">{status === 'Down' ? '-' : pid}</span>\r\n      <span className=\"item\">{status === 'Down' ? '-' : uptime}</span>\r\n      <span className=\"item\">\r\n        <ModalProviderWithKey>\r\n          <ModalConsumer>\r\n            {({ openModal }) => (\r\n              <ButtonWithPending\r\n                isPending={isPending}\r\n                onPress={\r\n                  status === 'Down'\r\n                    ? () => openModal(START_MODAL, { project, startF })\r\n                    : () => openModal(STOP_MODAL, { project, stopF })\r\n                }\r\n              >\r\n                {status === 'Down' ? 'start' : 'stop'}\r\n              </ButtonWithPending>\r\n            )}\r\n          </ModalConsumer>\r\n        </ModalProviderWithKey>\r\n        <ModalProviderWithKey>\r\n          <ModalConsumer>\r\n            {({ openModal }) => (\r\n              <ButtonWithPending\r\n                isPending={isPending}\r\n                onPress={() => openModal(UPDATE_MODAL, { project, updateF })}\r\n              >\r\n                update\r\n              </ButtonWithPending>\r\n            )}\r\n          </ModalConsumer>\r\n        </ModalProviderWithKey>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatus.propTypes = {\r\n  project: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n  uptime: PropTypes.string,\r\n  pid: PropTypes.number,\r\n  startF: PropTypes.func.isRequired,\r\n  stopF: PropTypes.func.isRequired,\r\n  updateF: PropTypes.func.isRequired,\r\n  isPending: PropTypes.bool,\r\n};\r\n\r\nStatus.defaultProps = {\r\n  isPending: false,\r\n};\r\n\r\nexport default Status;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button';\r\nimport withPending from '../hoc/withPending';\r\nimport './Refresh.css';\r\n\r\nconst ButtonWithPending = withPending(<Button disabled>pending</Button>)(Button);\r\n\r\nfunction Refresh({ refresh, nowDate, isPending }) {\r\n  return (\r\n    <span className=\"info\">\r\n      <span className=\"info-item\">{nowDate}</span>\r\n      <ButtonWithPending isPending={isPending} onPress={() => refresh()}>\r\n        refresh\r\n      </ButtonWithPending>\r\n    </span>\r\n  );\r\n}\r\n\r\nRefresh.propType = {\r\n  refresh: PropTypes.func.isRequired,\r\n  nowDate: PropTypes.string,\r\n};\r\n\r\nexport default Refresh;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { css } from '../hoc/withStyles';\r\n\r\nfunction History({ histories }) {\r\n  const results = histories\r\n    .map(({ occuredDate, project, command, result }) => {\r\n      return (\r\n        occuredDate.toLocaleString() +\r\n        ' ' +\r\n        project +\r\n        ' ' +\r\n        command +\r\n        ' ' +\r\n        (result ? '성공' : '실패')\r\n      );\r\n    })\r\n    .join('\\n');\r\n  return (\r\n    <textarea\r\n      {...css({ width: '100%' }, { height: '200px' }, { overflowY: 'scroll' })}\r\n      readOnly\r\n      value={results}\r\n    />\r\n  );\r\n}\r\n\r\nHistory.propTypes = {\r\n  histories: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      occuredDate: PropTypes.instanceOf(Date),\r\n      project: PropTypes.string,\r\n      command: PropTypes.string,\r\n      result: PropTypes.bool,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default History;\r\n","import React from 'react';\r\n\r\nfunction StatusTitle() {\r\n  return (\r\n    <div className=\"item-title\">\r\n      <span className=\"item\">project</span>\r\n      <span className=\"item\">status</span>\r\n      <span className=\"item\">pid</span>\r\n      <span className=\"item\">uptime</span>\r\n      <span className=\"item\">control</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StatusTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Dependency({ dep }) {\r\n  return <span>실행순서 : {dep}</span>;\r\n}\r\n\r\nDependency.propTypes = {\r\n  dep: PropTypes.string, //.isRequired,\r\n};\r\n\r\nexport default Dependency;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Status from '../component/Status';\r\nimport Refresh from '../component/Refresh';\r\nimport History from '../component/History';\r\nimport './SummaryBoard';\r\nimport './SummaryBoard.css';\r\nimport { trackPromise } from 'react-promise-tracker';\r\nimport StatusTitle from '../component/StatusTitle';\r\nimport Dependency from '../component/Dependency';\r\n\r\nclass SummaryBoard extends Component {\r\n  maxHistory = 50;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isPending: false,\r\n      projects: [],\r\n      nowDate: new Date(),\r\n      histories: [],\r\n      dep: '',\r\n    };\r\n\r\n    this.getSummary = this.getSummary.bind(this);\r\n    this.start = this.start.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.update = this.update.bind(this);\r\n    if (process.env.NODE_ENV && process.env.NODE_ENV === 'development') {\r\n      this.basicUrl = 'http://192.168.40.147:3001/dropship/api/v1';\r\n    } else {\r\n      this.basicUrl =\r\n        window.location.protocol + '//' + window.location.hostname + ':3001/dropship/api/v1';\r\n    }\r\n  }\r\n\r\n  pushHistory(history) {\r\n    if (this.state.histories.length === this.maxHistory) {\r\n      return [].concat(history, ...this.state.histories.slice(0, this.maxHistory - 1));\r\n    } else {\r\n      return [].concat(history, ...this.state.histories);\r\n    }\r\n  }\r\n\r\n  getDependency = async () => {\r\n    const {\r\n      data: { dependency },\r\n    } = await axios.get(this.basicUrl + '/dependency');\r\n    console.log(dependency);\r\n\r\n    this.setState({ dep: dependency });\r\n  };\r\n\r\n  getSummary = async () => {\r\n    this.doPending();\r\n    const {\r\n      data: { projects },\r\n    } = await axios.get(this.basicUrl + '/summary');\r\n\r\n    this.setState({ projects, nowDate: new Date() });\r\n    this.doIdle();\r\n  };\r\n\r\n  refresh = async () => {\r\n    this.getSummary().finally(() => this.getDependency());\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getDependency();\r\n    this.getSummary();\r\n  }\r\n\r\n  doPending() {\r\n    this.setState({ isPending: true });\r\n  }\r\n\r\n  doIdle() {\r\n    this.setState({ isPending: false });\r\n  }\r\n\r\n  controlEndpoint(command) {\r\n    return async (project) => {\r\n      this.doPending();\r\n      await trackPromise(\r\n        axios\r\n          .post(this.basicUrl + '/' + project + '/' + command)\r\n          .then(() => {\r\n            const historyArr = this.pushHistory({\r\n              occuredDate: new Date(),\r\n              project,\r\n              command,\r\n              result: true,\r\n            });\r\n            this.setState({\r\n              histories: historyArr,\r\n            });\r\n            this.getSummary();\r\n          })\r\n          .catch((error) => {\r\n            const historyArr = this.pushHistory({\r\n              occuredDate: new Date(),\r\n              project,\r\n              command,\r\n              result: false,\r\n            });\r\n            this.setState({\r\n              histories: historyArr,\r\n            });\r\n          })\r\n          .finally(() => {\r\n            this.getDependency().finally(() => this.doIdle());\r\n          }),\r\n      );\r\n    };\r\n  }\r\n\r\n  start = this.controlEndpoint('start');\r\n  stop = this.controlEndpoint('stop');\r\n  update = this.controlEndpoint('update');\r\n\r\n  render() {\r\n    const { projects, nowDate, isPending } = this.state;\r\n\r\n    return (\r\n      <section>\r\n        <div className=\"container\">\r\n          <h1 className=\"manager\">SmartSee Server Manager</h1>\r\n          <div className=\"refresh-bar\">\r\n            <Dependency dep={this.state.dep} />\r\n            <Refresh\r\n              refresh={this.refresh}\r\n              nowDate={nowDate.toLocaleString()}\r\n              isPending={isPending}\r\n            />\r\n          </div>\r\n\r\n          {\r\n            <>\r\n              <div className=\"status-box\">\r\n                <StatusTitle />\r\n                <div className=\"items\">\r\n                  {projects\r\n                    .sort((p1, p2) => p1.project.localeCompare(p2.project))\r\n                    .map((project) => (\r\n                      <Status\r\n                        className=\"item\"\r\n                        key={project.project}\r\n                        project={project.project}\r\n                        status={project.status}\r\n                        uptime={project.uptime}\r\n                        pid={project.pid}\r\n                        startF={this.start}\r\n                        stopF={this.stop}\r\n                        updateF={this.update}\r\n                        isPending={isPending}\r\n                      />\r\n                    ))}\r\n                </div>\r\n                <History histories={this.state.histories} />\r\n              </div>\r\n            </>\r\n          }\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SummaryBoard;\r\n","import React from 'react';\r\nimport { usePromiseTracker } from 'react-promise-tracker';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default (props) => {\r\n  const { promiseInProgress } = usePromiseTracker();\r\n\r\n  return (\r\n    promiseInProgress && (\r\n      <div\r\n        style={{\r\n          width: '100%',\r\n          height: '100',\r\n          position: 'absolute',\r\n          left: 0,\r\n          top: 20,\r\n        }}\r\n      >\r\n        <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport SummaryBoard from './summary/SummaryBoard';\r\nimport LoadingIndicator from './loading/LoadingIndicator';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <nav>\r\n        <SummaryBoard />\r\n        <LoadingIndicator />\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}